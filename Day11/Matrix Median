#include <iostream>
#include <vector>

using namespace std;

int find_median(vector<vector<int>>& matrix) 
  int min = matrix[0][0];
  int max = matrix[0][0];
  for (int i = 0; i < matrix.size(); i++) {
    for (int j = 0; j < matrix[i].size(); j++) {
      if (matrix[i][j] < min) {
        min = matrix[i][j];
      }
      if (matrix[i][j] > max) {
        max = matrix[i][j];
      }
    }
  }
  int low = min;
  int high = max;
  while (low <= high) {
    int mid = (low + high) / 2;
    int count = 0;
    for (int i = 0; i < matrix.size(); i++) {
      count += upper_bound(matrix[i].begin(), matrix[i].end(), mid) - matrix[i].begin();
    }

    if (count < (matrix.size() * matrix[0].size()) / 2 + 1) {
      low = mid + 1;
    } else if (count > (matrix.size() * matrix[0].size()) / 2) {
      high = mid - 1;
    } else {
      // Found the median
      return mid;
    }
  }

  // The median is not an integer
  return -1;
}

int main() {
  vector<vector<int>> matrix = {{1, 3, 5}, {2, 6, 9}, {3, 6, 9}};

  int median = find_median(matrix);

  cout << "The median is " << median << endl;

  return 0;
}
