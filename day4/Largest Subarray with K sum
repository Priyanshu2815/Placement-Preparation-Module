#include <iostream>
#include <vector>

using namespace std;

int longestSubarrayWithSumZero(vector<int> &nums) 
  unordered_map<int, int> seen;

 
  int max_length = 0;
  int current_sum = 0;
  for (int num : nums) {
    current_sum += num;
    if (current_sum == 0) {
      max_length = max(max_length, 1);
    } else if (seen.count(current_sum)) {
      max_length = max(max_length, current_sum - seen[current_sum]);
    } else {
      seen[current_sum] = current_sum;
    }
  }

  return max_length;
}

int main() {
  vector<int> nums = {1, 2, -3, 4, -1, 2, 1, -5, 3};

  int length = longestSubarrayWithSumZero(nums);

  cout << "The longest subarray with sum zero has length: " << length << endl;

  return 0;
}
