#include <iostream>
#include <vector>

using namespace std;

bool isCyclic(vector<vector<int>>& adj, int start) {
  vector<bool> visited(adj.size(), false);
  vector<bool> recStack(adj.size(), false);

  stack<int> s;
  s.push(start);

  while (!s.empty()) {
    int current = s.top();
    s.pop();

    if (recStack[current]) {
      return true;
    }

    if (!visited[current]) {
      visited[current] = true;
      recStack[current] = true;

      for (int neighbor : adj[current]) {
        if (isCyclic(adj, neighbor)) {
          return true;
        }
      }
    }

    recStack[current] = false;
  }

  return false;
}

int main() {
  vector<vector<int>> adj = {{1, 2}, {0, 2, 3}, {0, 1}, {3}};
  int start = 0;

  bool isCyclic = isCyclic(adj, start);

  cout << isCyclic << endl;

  return 0;
}
