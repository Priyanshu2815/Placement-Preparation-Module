#include <iostream>
#include <vector>

using namespace std;

void topologicalSort(vector<vector<int>>& adj, vector<int>& indegree, vector<int>& order) {
  queue<int> q;

  for (int i = 0; i < indegree.size(); i++) {
    if (indegree[i] == 0) {
      q.push(i);
    }
  }

  while (!q.empty()) {
    int current = q.front();
    q.pop();

    order.push_back(current);

    for (int neighbor : adj[current]) {
      indegree[neighbor]--;

      if (indegree[neighbor] == 0) {
        q.push(neighbor);
      }
    }
  }
}

int main() {
  vector<vector<int>> adj = {{1, 2}, {0, 2, 3}, {0, 1}, {3}};
  vector<int> indegree(adj.size(), 0);
  vector<int> order;

  for (int i = 0; i < adj.size(); i++) {
    for (int neighbor : adj[i]) {
      indegree[neighbor]++;
    }
  }

  topologicalSort(adj, indegree, order);

  for (int i = 0; i < order.size(); i++) {
    cout << order[i] << " ";
  }

  cout << endl;

  return 0;
}
