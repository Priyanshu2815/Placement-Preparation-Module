#include <iostream>

using namespace std;

struct Node {
  int data;
  Node* next;
};

bool hasCycle(Node* head) {
  if (head == nullptr) {
    return false;
  }

  Node* slow = head;
  Node* fast = head->next;

  while (fast != nullptr && fast->next != nullptr) {
    slow = slow->next;
    fast = fast->next->next;

    if (slow == fast) {
      return true;
    }
  }

  return false;
}

int main() {
  Node* head = new Node();
  head->data = 1;
  head->next = new Node();
  head->next->data = 2;
  head->next->next = new Node();
  head->next->next->data = 3;
  head->next->next->next = new Node();
  head->next->next->next->data = 4;
  head->next->next->next->next = head->next->next;

  bool hasCycle = hasCycle(head);
  if (hasCycle) {
    cout << "The linked list has a cycle." << endl;
  } else {
    cout << "The linked list does not have a cycle." << endl;
  }

  return 0;
}
