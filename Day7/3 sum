#include <iostream>
#include <vector>

using namespace std;

vector<vector<int>> threeSum(vector<int> arr) {
  vector<vector<int>> triplets;
  int n = arr.size();
  sort(arr.begin(), arr.end());
  for (int i = 0; i < n - 2; i++) {
    if (i > 0 && arr[i] == arr[i - 1]) {
      continue;
    }

    int target = -arr[i];
    int j = i + 1;
    int k = n - 1;
    while (j < k) {
      if (arr[j] + arr[k] == target) {
        triplets.push_back({arr[i], arr[j], arr[k]});
        j++;
        k--;
        while (j < k && arr[j] == arr[j - 1]) {
          j++;
        }

        while (j < k && arr[k] == arr[k + 1]) {
          k--;
        }
      } else if (arr[j] + arr[k] < target) {
        j++;
      } else {
        k--;
      }
    }
  }

  return triplets;
}

int main() {
  vector<int> arr = {-1, 0, 1, 2, -3, 4};
  vector<vector<int>> triplets = threeSum(arr);

  for (vector<int> triplet : triplets) {
    for (int num : triplet) {
      cout << num << " ";
    }
    cout << endl;
  }

  return 0;
}
