#include <iostream>

using namespace std;

struct Node {
  int data;
  Node* next;
  Node* random;
};

Node* cloneLinkedList(Node* head) {
  if (head == nullptr) {
    return nullptr;
  }
  Node* clonedHead = new Node();
  clonedHead->data = head->data;
  unordered_map<Node*, Node*> nodeMap;
  nodeMap[head] = clonedHead;
  Node* curr = head->next;
  Node* clonedCurr = clonedHead;
  while (curr != nullptr) {
    Node* newNode = new Node();
    newNode->data = curr->data;
    newNode->random = curr->random;

    nodeMap[curr] = newNode;
    clonedCurr->next = newNode;

    curr = curr->next;
    clonedCurr = clonedCurr->next;
  }
  for (auto iter = nodeMap.begin(); iter != nodeMap.end(); iter++) {
    iter->second->random = nodeMap[iter->second->random];
  }

  return clonedHead;
}

int main() {
  Node* head = new Node();
  head->data = 1;
  head->next = new Node();
  head->next->data = 2;
  head->next->next = new Node();
  head->next->next->data = 3;
  head->next->next->next = nullptr;

  head->random = head->next->next;
  head->next->random = head;
  head->next->next->random = head->next;

  Node* clonedHead = cloneLinkedList(head);
  cout << "The cloned linked list is: ";
  while (clonedHead != nullptr) {
    cout << clonedHead->data << " ";
    clonedHead = clonedHead->next;
  }
  cout << endl;

  return 0;
}
