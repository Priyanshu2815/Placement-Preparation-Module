#include <iostream>
#include <vector>

using namespace std;

struct Interval {
  int start;
  int end;
};

vector<Interval> mergeIntervals(vector<Interval> intervals) {

  sort(intervals.begin(), intervals.end(), [](Interval a, Interval b) {
    return a.start < b.start;
  });

 
  vector<Interval> mergedIntervals;


  for (int i = 0; i < intervals.size(); i++) {
   
    if (mergedIntervals.empty() || mergedIntervals.back().end < intervals[i].start) {
      mergedIntervals.push_back(intervals[i]);
    } else {
mergedIntervals.back().end = max(mergedIntervals.back().end, intervals[i].end);
    }
  }

  return mergedIntervals;
}

int main() {
     vector<Interval> intervals = {
    {1, 3},
    {2, 6},
    {8, 10},
    {15, 18},
  };

 
  vector<Interval> mergedIntervals = mergeIntervals(intervals);
  for (Interval interval : mergedIntervals) {
    cout << interval.start << " " << interval.end << endl;
  }
  
  return 0;
}


