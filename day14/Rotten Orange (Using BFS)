#include <iostream>
#include <vector>

using namespace std;

int min_time_to_rot(vector<vector<int>> grid) {

  queue<pair<int, int>> q;


  int time = 0;

  for (int i = 0; i < grid.size(); i++) {
    for (int j = 0; j < grid[0].size(); j++) {
   
      if (grid[i][j] == 2) {
        q.push({i, j});
      }
    }
  }

    
    int i = q.front().first;
    int j = q.front().second;

   
    q.pop();

   
    if (grid[i][j] == 1) {
      grid[i][j] = 2;

     
      for (int x = -1; x <= 1; x++) {
        for (int y = -1; y <= 1; y++) {
    
          if (x != 0 || y != 0) {
            int new_i = i + x;
            int new_j = j + y;

            if (0 <= new_i && new_i < grid.size() && 0 <= new_j && new_j < grid[0].size() && grid[new_i][new_j] == 1) {
              q.push({new_i, new_j});
            }
          }
        }
      }
    }

 
    time++;
  }


  for (int i = 0; i < grid.size(); i++) {
    for (int j = 0; j < grid[0].size(); j++) {
      if (grid[i][j] == 1) {
        return -1;
      }
    }
  }

  return time;
}

int main() {
  vector<vector<int>> grid = {{2, 1, 0, 0}, {1, 1, 0, 0}, {0, 0, 2, 2}, {0, 0, 0, 1}};
  int time = min_time_to_rot(grid);

  cout << time << endl;

  return 0;
}
